AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SUO-AWS - AWS News Subscription Platform

Globals:
  Function:
    Timeout: 60
    MemorySize: 128
    Architectures:
      - x86_64
    Environment:
      Variables:
        AWS_REGION: us-east-1
        LOG_LEVEL: INFO

Resources:
  # DynamoDB Tables
  PostsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: suo-aws-posts
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH

  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: aws-suo-users
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: email
          AttributeType: S
      KeySchema:
        - AttributeName: email
          KeyType: HASH

  CategoriesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: suo-categories
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH

  # S3 Bucket for batch inference
  BatchInferenceBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub aws-news-batch-inference-${AWS::AccountId}

  # Lambda Functions
  CategorizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: suo-aws-categorizer
      CodeUri: functions/categorizer/
      Handler: app.lambda_handler
      Runtime: python3.10
      MemorySize: 128
      Timeout: 30
      Environment:
        Variables:
          POSTS_TABLE: !Ref PostsTable
          CATEGORIES_TABLE: !Ref CategoriesTable
          GENAI_MODEL: false
          BATCH_BUCKET: !Ref BatchInferenceBucket
          BEDROCK_MODEL_ID: amazon.nova-lite-v1:0
          BATCH_PREFIX: batch-inference
          BATCH_ROLE_NAME: AWSNewsBatchInferenceRole
          AWS_BLOGS_BASE_URL: https://aws.amazon.com/blogs/
          UNKNOWN_CATEGORY: unknown
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PostsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref CategoriesTable
        - Statement:
            - Effect: Allow
              Action:
                - bedrock:*
                - s3:*
                - iam:CreateRole
                - iam:GetRole
                - iam:PutRolePolicy
                - iam:PassRole
                - sts:GetCallerIdentity
              Resource: '*'

  NotifierFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: suo-aws-notifier
      CodeUri: functions/notifier/
      Handler: app.handler
      Runtime: nodejs20.x
      Environment:
        Variables:
          POSTS_TABLE: !Ref PostsTable
          USERS_TABLE: !Ref UsersTable
          CATEGORIES_TABLE: !Ref CategoriesTable
          FROM_EMAIL: cashgraphicx@gmail.com
          SNS_TOPIC_ARN: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:SuoAwsErrorNotifier.fifo
          EMAIL_SERVICE: gmail
          EMAIL_USER: cashgraphicx@gmail.com
          EMAIL_PASS: <your-email-password>
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref PostsTable
        - DynamoDBReadPolicy:
            TableName: !Ref UsersTable
        - DynamoDBReadPolicy:
            TableName: !Ref CategoriesTable
        - Statement:
            - Effect: Allow
              Action:
                - sns:Publish
              Resource: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:SuoAwsErrorNotifier.fifo

Outputs:
  CategorizerFunctionArn:
    Value: !GetAtt CategorizerFunction.Arn
  NotifierFunctionArn:
    Value: !GetAtt NotifierFunction.Arn